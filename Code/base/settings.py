# SPDX-License-Identifier: BSD-3-Clause
"""
settings.py

(C) Copyright 2020 Friedrich Luetze GmbH, S. Strobel, S. Hentges, J. Luelsdorf <lsd@luetze.de>

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import json


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

try:
    # load config file
    with open(os.path.join(BASE_DIR, "../../config.json"), "r") as config_file:
        config = json.load(config_file)

    # Read password and key from environment
    LSD_DB_PASS = config["lsd_dbpass"]
    LSD_SECRET_KEY = config["lsd_secret_key"]
    LSD_LDAP_USER = "ricoh.ldap@luetze.int"
    LSD_LDAP_PASS = config["lsd_ldappass"]

    if config["lsd_testserver"]:
        print("-----> Starting in Testmode <-----")
        LSD_TESTSERVER = config["lsd_testserver"]
        DEBUG = True

    else:
        print("-----> Starting in Productionmode <-----")
        LSD_TESTSERVER = False
        DEBUG = False
    if config["lsd_debug"]:
        DEBUG = config["lsd_debug"]

# if the config file is not found default to test settings
except (IOError, KeyError) as exception:
    LSD_SECRET_KEY = "8(_8$l#qc7-s$%ea@=h3e1-ol#)4)q(wxn==ruyj_t75sec=w$"
    LSD_DB_PASS = ""
    LSD_LDAP_USER = ""
    LSD_LDAP_PASS = ""
    LSD_TESTSERVER = True
    DEBUG = True

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = LSD_SECRET_KEY

if LSD_TESTSERVER:
    print("-----> Testmode <-----")
    ALLOWED_HOSTS = ["*"]
else:
    ALLOWED_HOSTS = ["software.luetze.int"]

# Application definition

INSTALLED_APPS = [
    'va.apps.VaConfig',
    'packages.apps.PackagesConfig',
    'licenses.apps.LicensesConfig',
    'software.apps.SoftwareConfig',
    'tools.apps.ToolsConfig',
    'products.apps.ProductsConfig',
    'lsd.apps.LsdConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_extensions',
    'django_python3_ldap',
    'rest_framework',
    'crispy_forms',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "base.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "base.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

# use local sqlite database for testing
if LSD_TESTSERVER:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
        }
    }

# use external sqlite database for production
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql",
            "NAME": "lsd",
            "USER": "lsd",
            "PASSWORD": LSD_DB_PASS,
            "HOST": "localhost",
            "PORT": "",
        }
    }

REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.AllowAny",
    ],
}

# No forced slashes after URL's in order to use restconform urls
APPEND_SLASH = {False}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]



if LSD_TESTSERVER:
    AUTHENTICATION_BACKENDS = [
        "django.contrib.auth.backends.ModelBackend",
    ]
else:
    AUTHENTICATION_BACKENDS = [
        "django_auth_ldap.backend.LDAPBackend",
        "django.contrib.auth.backends.ModelBackend",
    ]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = "/var/lsd/static"

# location where uploaded files are saved
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = "/media/"
